{
  "contractName": "Escrow",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimaryTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "primary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPrimary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawWithGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimaryTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferPrimary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawWithGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base escrow contract, holds funds designated for a payee until they withdraw them. Intended usage: This contract (and derived escrow contracts) should be a standalone contract, that only interacts with the contract that instantiated it. That way, it is guaranteed that all Ether will be handled according to the `Escrow` rules, and there is no need to check for payable functions or transfers in the inheritance tree. The contract that uses the escrow as its payment method should be its primary, and provide public methods redirecting to the escrow's deposit and withdraw.\",\"kind\":\"dev\",\"methods\":{\"deposit(address)\":{\"details\":\"Stores the sent amount as credit to be withdrawn.\",\"params\":{\"payee\":\"The destination address of the funds.\"}},\"primary()\":{\"returns\":{\"_0\":\"the address of the primary.\"}},\"transferPrimary(address)\":{\"details\":\"Transfers contract to a new primary.\",\"params\":{\"recipient\":\"The address of new primary.\"}},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding 2300 gas (a Solidity `transfer`). NOTE: This function has been deprecated, use {withdrawWithGas} instead. Calling contracts with fixed-gas limits is an anti-pattern and may break contract interactions in network upgrades (hardforks). https://diligence.consensys.net/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more.]\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to.\"}},\"withdrawWithGas(address)\":{\"details\":\"Same as {withdraw}, but forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}. _Available since v2.4.0._\"}},\"title\":\"Escrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/crowdsale/utils/escrow/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/crowdsale/utils/escrow/Escrow.sol\":{\"keccak256\":\"0x80aaa5c19be0370e8e697e1e8061217fe06c062fa0ee7513349b5fef6c0e1986\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcbdb6d89e05a9d21f4ecb270cff4ed24ea45ae41ff22428d65b0a8e1c34a0c6\",\"dweb:/ipfs/QmTK43XFMDqtoCWpvRZ1mLYeSNED5BLKnQWzLdjJ83L7u5\"]},\"project:/contracts/crowdsale/utils/ownership/Secondary.sol\":{\"keccak256\":\"0x426c69adeb8ed078fd1236c6877e113ab38a2499ffd97a14f5c9ae93e691b365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://354f3dba89ee52196cbb7b4cac697a5bc94b5ba0ab1ffc87201d8a12c47738d0\",\"dweb:/ipfs/QmVvczaPMws4AYs9S545Jsh66BbmHT82R4cjGWSphTgshL\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081179091556040805182815290517f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d99181900360200190a150610649806100696000396000f3fe6080604052600436106100555760003560e01c80632348238c1461005a57806351cff8d91461007c5780636809691a1461009c578063c6dbdf61146100bc578063e3a9db1a146100e9578063f340fa011461012d575b600080fd5b34801561006657600080fd5b5061007a610075366004610584565b610140565b005b34801561008857600080fd5b5061007a610097366004610584565b610239565b3480156100a857600080fd5b5061007a6100b7366004610584565b6102fe565b3480156100c857600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100f557600080fd5b5061011f610104366004610584565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100e0565b61007a61013b366004610584565b610394565b6000546001600160a01b0316336001600160a01b03161461017c5760405162461bcd60e51b8152600401610173906105a1565b60405180910390fd5b6001600160a01b0381166101e55760405162461bcd60e51b815260206004820152602a60248201527f5365636f6e646172793a206e6577207072696d61727920697320746865207a65604482015269726f206164647265737360b01b6064820152608401610173565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d99060200160405180910390a150565b6000546001600160a01b0316336001600160a01b03161461026c5760405162461bcd60e51b8152600401610173906105a1565b6001600160a01b038116600081815260016020526040808220805490839055905190929183156108fc02918491818181858888f193505050501580156102b6573d6000803e3d6000fd5b50816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516102f291815260200190565b60405180910390a25050565b6000546001600160a01b0316336001600160a01b0316146103315760405162461bcd60e51b8152600401610173906105a1565b6001600160a01b0381166000818152600160205260408120805491905590610359908261043b565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516102f291815260200190565b6000546001600160a01b0316336001600160a01b0316146103c75760405162461bcd60e51b8152600401610173906105a1565b6001600160a01b03811660009081526001602052604090205434906103ec9082610559565b6001600160a01b038316600081815260016020526040908190209290925590517f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906102f29084815260200190565b8047101561048b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610173565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50509050806105545760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610173565b505050565b600061056582846105ed565b9392505050565b6001600160a01b038116811461058157600080fd5b50565b60006020828403121561059657600080fd5b81356105658161056c565b6020808252602c908201527f5365636f6e646172793a2063616c6c6572206973206e6f74207468652070726960408201526b1b585c9e481858d8dbdd5b9d60a21b606082015260800190565b6000821982111561060e57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122070d94cdc5c6890e029df93c5792303ea251d181ca1f070bf6b3b3641509e927264736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80632348238c1461005a57806351cff8d91461007c5780636809691a1461009c578063c6dbdf61146100bc578063e3a9db1a146100e9578063f340fa011461012d575b600080fd5b34801561006657600080fd5b5061007a610075366004610584565b610140565b005b34801561008857600080fd5b5061007a610097366004610584565b610239565b3480156100a857600080fd5b5061007a6100b7366004610584565b6102fe565b3480156100c857600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100f557600080fd5b5061011f610104366004610584565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100e0565b61007a61013b366004610584565b610394565b6000546001600160a01b0316336001600160a01b03161461017c5760405162461bcd60e51b8152600401610173906105a1565b60405180910390fd5b6001600160a01b0381166101e55760405162461bcd60e51b815260206004820152602a60248201527f5365636f6e646172793a206e6577207072696d61727920697320746865207a65604482015269726f206164647265737360b01b6064820152608401610173565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d99060200160405180910390a150565b6000546001600160a01b0316336001600160a01b03161461026c5760405162461bcd60e51b8152600401610173906105a1565b6001600160a01b038116600081815260016020526040808220805490839055905190929183156108fc02918491818181858888f193505050501580156102b6573d6000803e3d6000fd5b50816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516102f291815260200190565b60405180910390a25050565b6000546001600160a01b0316336001600160a01b0316146103315760405162461bcd60e51b8152600401610173906105a1565b6001600160a01b0381166000818152600160205260408120805491905590610359908261043b565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516102f291815260200190565b6000546001600160a01b0316336001600160a01b0316146103c75760405162461bcd60e51b8152600401610173906105a1565b6001600160a01b03811660009081526001602052604090205434906103ec9082610559565b6001600160a01b038316600081815260016020526040908190209290925590517f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906102f29084815260200190565b8047101561048b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610173565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b50509050806105545760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610173565b505050565b600061056582846105ed565b9392505050565b6001600160a01b038116811461058157600080fd5b50565b60006020828403121561059657600080fd5b81356105658161056c565b6020808252602c908201527f5365636f6e646172793a2063616c6c6572206973206e6f74207468652070726960408201526b1b585c9e481858d8dbdd5b9d60a21b606082015260800190565b6000821982111561060e57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122070d94cdc5c6890e029df93c5792303ea251d181ca1f070bf6b3b3641509e927264736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:219:328",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:328",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:328",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:328"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:328"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:328"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:328"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:328",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:328",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:328"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:328"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:328",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:328"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:328"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:328"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:328"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:328",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:328",
                "type": ""
              }
            ],
            "src": "14:203:328"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 328,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3098:328",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:328",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:328",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:328",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:328",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:328",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:328"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:328"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:328"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:328"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:328"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:328",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:328",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:328"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:328"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:328",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:328"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:328"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:328"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:328"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:328"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:328"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:328"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:328",
                "type": ""
              }
            ],
            "src": "14:131:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "220:177:328",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "266:16:328",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "275:1:328",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "278:1:328",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "268:6:328"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "268:12:328"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "268:12:328"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "241:7:328"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "250:9:328"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "237:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:23:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "262:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "233:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "233:32:328"
                  },
                  "nodeType": "YulIf",
                  "src": "230:52:328"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "291:36:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "317:9:328"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "304:12:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:23:328"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "295:5:328",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "361:5:328"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "336:24:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:31:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "336:31:328"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "376:15:328",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "386:5:328"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "376:6:328"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "186:9:328",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "197:7:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "209:6:328",
                "type": ""
              }
            ],
            "src": "150:247:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "480:177:328",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "526:16:328",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "535:1:328",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "538:1:328",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "528:6:328"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "528:12:328"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "528:12:328"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "501:7:328"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:328"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:23:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "522:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:32:328"
                  },
                  "nodeType": "YulIf",
                  "src": "490:52:328"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "551:36:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "577:9:328"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "564:12:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:23:328"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "555:5:328",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "621:5:328"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "596:24:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:31:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "596:31:328"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "636:15:328",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "646:5:328"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "636:6:328"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "446:9:328",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "457:7:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "469:6:328",
                "type": ""
              }
            ],
            "src": "402:255:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:102:328",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "773:26:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "785:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "796:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "781:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:18:328"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "773:4:328"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "815:9:328"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "830:6:328"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "846:3:328",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "851:1:328",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "842:3:328"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "842:11:328"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "855:1:328",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "838:3:328"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "838:19:328"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "826:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "826:32:328"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "808:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:51:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "808:51:328"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "732:9:328",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "743:6:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "754:4:328",
                "type": ""
              }
            ],
            "src": "662:203:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "971:76:328",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "981:26:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "993:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1004:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "989:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "989:18:328"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "981:4:328"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1023:9:328"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1034:6:328"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1016:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:25:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1016:25:328"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "940:9:328",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "951:6:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "962:4:328",
                "type": ""
              }
            ],
            "src": "870:177:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1226:234:328",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1243:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1254:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1236:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1236:21:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1236:21:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1277:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1288:2:328",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1273:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1273:18:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1293:2:328",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1266:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:30:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1266:30:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1316:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1327:2:328",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1312:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1312:18:328"
                      },
                      {
                        "hexValue": "5365636f6e646172793a2063616c6c6572206973206e6f742074686520707269",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1332:34:328",
                        "type": "",
                        "value": "Secondary: caller is not the pri"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1305:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1305:62:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1305:62:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1387:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1398:2:328",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1383:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1383:18:328"
                      },
                      {
                        "hexValue": "6d617279206163636f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1403:14:328",
                        "type": "",
                        "value": "mary account"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1376:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1376:42:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1376:42:328"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1427:27:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1439:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1450:3:328",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1435:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:19:328"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1427:4:328"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c4712475d2d6028b616998502d5ba5483942315abd60cf35b74a8ca311ef5575__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1203:9:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1217:4:328",
                "type": ""
              }
            ],
            "src": "1052:408:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1639:232:328",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1656:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1667:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1649:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1649:21:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1649:21:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1690:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1701:2:328",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1686:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1686:18:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1706:2:328",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1679:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:30:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1679:30:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1729:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1740:2:328",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1725:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1725:18:328"
                      },
                      {
                        "hexValue": "5365636f6e646172793a206e6577207072696d61727920697320746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1745:34:328",
                        "type": "",
                        "value": "Secondary: new primary is the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1718:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1718:62:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1718:62:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1800:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1811:2:328",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1796:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1796:18:328"
                      },
                      {
                        "hexValue": "726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1816:12:328",
                        "type": "",
                        "value": "ro address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1789:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1789:40:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1789:40:328"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1838:27:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1850:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1861:3:328",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1846:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1846:19:328"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1838:4:328"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a60f0c70d794ac81ff220fb01136a8b68d4bc14fa4d72f7395e6f0e260414350__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1616:9:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1630:4:328",
                "type": ""
              }
            ],
            "src": "1465:406:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2050:179:328",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2067:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2078:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2060:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2060:21:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2060:21:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2101:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2112:2:328",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2097:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2097:18:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2117:2:328",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2090:30:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2090:30:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2140:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2151:2:328",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2136:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2136:18:328"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2156:31:328",
                        "type": "",
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2129:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2129:59:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2129:59:328"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2197:26:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2209:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2220:2:328",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2205:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:18:328"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2197:4:328"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2027:9:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2041:4:328",
                "type": ""
              }
            ],
            "src": "1876:353:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2425:14:328",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2427:10:328",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2434:3:328"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2427:3:328"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2409:3:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2417:3:328",
                "type": ""
              }
            ],
            "src": "2234:205:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2618:248:328",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2635:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2646:2:328",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2628:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2628:21:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2628:21:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2669:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2680:2:328",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2665:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2665:18:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2685:2:328",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2658:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2658:30:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2658:30:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2708:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2719:2:328",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2704:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2704:18:328"
                      },
                      {
                        "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2724:34:328",
                        "type": "",
                        "value": "Address: unable to send value, r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2697:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2697:62:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2697:62:328"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2779:9:328"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2790:2:328",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2775:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2775:18:328"
                      },
                      {
                        "hexValue": "6563697069656e74206d61792068617665207265766572746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2795:28:328",
                        "type": "",
                        "value": "ecipient may have reverted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2768:6:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2768:56:328"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2768:56:328"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2833:27:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2845:9:328"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2856:3:328",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2841:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2841:19:328"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2833:4:328"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2595:9:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2609:4:328",
                "type": ""
              }
            ],
            "src": "2444:422:328"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2919:177:328",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2954:111:328",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2975:1:328",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2982:3:328",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2987:10:328",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2978:3:328"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2978:20:328"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2968:6:328"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2968:31:328"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2968:31:328"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3019:1:328",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3022:4:328",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3012:6:328"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3012:15:328"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3012:15:328"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3047:1:328",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3050:4:328",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3040:6:328"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3040:15:328"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3040:15:328"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2935:1:328"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2942:1:328"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2938:3:328"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2938:6:328"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2932:2:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2932:13:328"
                  },
                  "nodeType": "YulIf",
                  "src": "2929:136:328"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3074:16:328",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3085:1:328"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3088:1:328"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3081:3:328"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3081:9:328"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3074:3:328"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2902:1:328",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2905:1:328",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2911:3:328",
                "type": ""
              }
            ],
            "src": "2871:225:328"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_c4712475d2d6028b616998502d5ba5483942315abd60cf35b74a8ca311ef5575__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Secondary: caller is not the pri\")\n        mstore(add(headStart, 96), \"mary account\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a60f0c70d794ac81ff220fb01136a8b68d4bc14fa4d72f7395e6f0e260414350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Secondary: new primary is the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
      "id": 328,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "853:2101:317:-:0;;;;;;;;;;;;-1:-1:-1;546:17:321;588:20;;-1:-1:-1;;;;;;588:20:321;719:10:26;588:20:321;;;;;;623:29;;;160:51:328;;;623:29:321;;;;;;;148:2:328;623:29:321;;;536:123;853:2101:317;;;;;;",
  "deployedSourceMap": "853:2101:317:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:232:321;;;;;;;;;;-1:-1:-1;1153:232:321;;;;;:::i;:::-;;:::i;:::-;;2138:225:317;;;;;;;;;;-1:-1:-1;2138:225:317;;;;;:::i;:::-;;:::i;2727:::-;;;;;;;;;;-1:-1:-1;2727:225:317;;;;;:::i;:::-;;:::i;949:81:321:-;;;;;;;;;;-1:-1:-1;989:7:321;1015:8;949:81;;-1:-1:-1;;;;;1015:8:321;;;808:51:328;;796:2;781:18;949:81:321;;;;;;;;1139:105:317;;;;;;;;;;-1:-1:-1;1139:105:317;;;;;:::i;:::-;-1:-1:-1;;;;;1221:16:317;1195:7;1221:16;;;:9;:16;;;;;;;1139:105;;;;1016:25:328;;;1004:2;989:18;1139:105:317;870:177:328;1386:207:317;;;;;;:::i;:::-;;:::i;1153:232:321:-;809:8;;-1:-1:-1;;;;;809:8:321;719:10:26;-1:-1:-1;;;;;793:24:321;;785:81;;;;-1:-1:-1;;;785:81:321;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1234:23:321;::::1;1226:78;;;::::0;-1:-1:-1;;;1226:78:321;;1667:2:328;1226:78:321::1;::::0;::::1;1649:21:328::0;1706:2;1686:18;;;1679:30;1745:34;1725:18;;;1718:62;-1:-1:-1;;;1796:18:328;;;1789:40;1846:19;;1226:78:321::1;1465:406:328::0;1226:78:321::1;1314:8;:20:::0;;-1:-1:-1;;;;;;1314:20:321::1;-1:-1:-1::0;;;;;1314:20:321;::::1;::::0;;::::1;::::0;;;1349:29:::1;::::0;808:51:328;;;1349:29:321::1;::::0;796:2:328;781:18;1349:29:321::1;;;;;;;1153:232:::0;:::o;2138:225:317:-;809:8:321;;-1:-1:-1;;;;;809:8:321;719:10:26;-1:-1:-1;;;;;793:24:321;;785:81;;;;-1:-1:-1;;;785:81:321;;;;;;;:::i;:::-;-1:-1:-1;;;;;2234:16:317;::::1;2216:15;2234:16:::0;;;:9:::1;:16;::::0;;;;;;;2261:20;;;;2292:23;;2234:16;;;2292:23;::::1;;;::::0;2234:16;;2292:23;2216:15;2292:23;2234:16;;2292:23;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2341:5;-1:-1:-1::0;;;;;2331:25:317::1;;2348:7;2331:25;;;;1016::328::0;;1004:2;989:18;;870:177;2331:25:317::1;;;;;;;;2206:157;2138:225:::0;:::o;2727:::-;809:8:321;;-1:-1:-1;;;;;809:8:321;719:10:26;-1:-1:-1;;;;;793:24:321;;785:81;;;;-1:-1:-1;;;785:81:321;;;;;;;:::i;:::-;-1:-1:-1;;;;;2822:16:317;::::1;2804:15;2822:16:::0;;;:9:::1;:16;::::0;;;;;;2849:20;;;2822:16;2880:24:::1;::::0;2822:16;2880:15:::1;:24::i;:::-;2930:5;-1:-1:-1::0;;;;;2920:25:317::1;;2937:7;2920:25;;;;1016::328::0;;1004:2;989:18;;870:177;1386:207:317;809:8:321;;-1:-1:-1;;;;;809:8:321;719:10:26;-1:-1:-1;;;;;793:24:321;;785:81;;;;-1:-1:-1;;;785:81:321;;;;;;;:::i;:::-;-1:-1:-1;;;;;1518:16:317;::::1;1463:14;1518:16:::0;;;:9:::1;:16;::::0;;;;;1480:9:::1;::::0;1518:28:::1;::::0;1480:9;1518:20:::1;:28::i;:::-;-1:-1:-1::0;;;;;1499:16:317;::::1;;::::0;;;:9:::1;:16;::::0;;;;;;:47;;;;1562:24;;::::1;::::0;::::1;::::0;1579:6;1016:25:328;;1004:2;989:18;;870:177;2412:312:24;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:24;;2078:2:328;2493:73:24;;;2060:21:328;2117:2;2097:18;;;2090:30;2156:31;2136:18;;;2129:59;2205:18;;2493:73:24;1876:353:328;2493:73:24;2578:12;2596:9;-1:-1:-1;;;;;2596:14:24;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:24;;2646:2:328;2639:78:24;;;2628:21:328;2685:2;2665:18;;;2658:30;2724:34;2704:18;;;2697:62;2795:28;2775:18;;;2768:56;2841:19;;2639:78:24;2444:422:328;2639:78:24;2483:241;2412:312;;:::o;2755:96:36:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:36:o;14:131:328:-;-1:-1:-1;;;;;89:31:328;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;1052:408::-;1254:2;1236:21;;;1293:2;1273:18;;;1266:30;1332:34;1327:2;1312:18;;1305:62;-1:-1:-1;;;1398:2:328;1383:18;;1376:42;1450:3;1435:19;;1052:408::o;2871:225::-;2911:3;2942:1;2938:6;2935:1;2932:13;2929:136;;;2987:10;2982:3;2978:20;2975:1;2968:31;3022:4;3019:1;3012:15;3050:4;3047:1;3040:15;2929:136;-1:-1:-1;3081:9:328;;2871:225::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../ownership/Secondary.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\n /**\n  * @title Escrow\n  * @dev Base escrow contract, holds funds designated for a payee until they\n  * withdraw them.\n  *\n  * Intended usage: This contract (and derived escrow contracts) should be a\n  * standalone contract, that only interacts with the contract that instantiated\n  * it. That way, it is guaranteed that all Ether will be handled according to\n  * the `Escrow` rules, and there is no need to check for payable functions or\n  * transfers in the inheritance tree. The contract that uses the escrow as its\n  * payment method should be its primary, and provide public methods redirecting\n  * to the escrow's deposit and withdraw.\n  */\ncontract Escrow is Secondary {\n    using SafeMath for uint256;\n    using Address for address payable;\n\n    event Deposited(address indexed payee, uint256 weiAmount);\n    event Withdrawn(address indexed payee, uint256 weiAmount);\n\n    mapping(address => uint256) private _deposits;\n\n    function depositsOf(address payee) public view returns (uint256) {\n        return _deposits[payee];\n    }\n\n    /**\n     * @dev Stores the sent amount as credit to be withdrawn.\n     * @param payee The destination address of the funds.\n     */\n    function deposit(address payee) public virtual onlyPrimary payable {\n        uint256 amount = msg.value;\n        _deposits[payee] = _deposits[payee].add(amount);\n\n        emit Deposited(payee, amount);\n    }\n\n    /**\n     * @dev Withdraw accumulated balance for a payee, forwarding 2300 gas (a\n     * Solidity `transfer`).\n     *\n     * NOTE: This function has been deprecated, use {withdrawWithGas} instead.\n     * Calling contracts with fixed-gas limits is an anti-pattern and may break\n     * contract interactions in network upgrades (hardforks).\n     * https://diligence.consensys.net/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more.]\n     *\n     * @param payee The address whose funds will be withdrawn and transferred to.\n     */\n    function withdraw(address payable payee) public virtual onlyPrimary {\n        uint256 payment = _deposits[payee];\n\n        _deposits[payee] = 0;\n\n        payee.transfer(payment);\n\n        emit Withdrawn(payee, payment);\n    }\n\n    /**\n     * @dev Same as {withdraw}, but forwarding all gas to the recipient.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * _Available since v2.4.0._\n     */\n    function withdrawWithGas(address payable payee) public onlyPrimary {\n        uint256 payment = _deposits[payee];\n\n        _deposits[payee] = 0;\n\n        payee.sendValue(payment);\n\n        emit Withdrawn(payee, payment);\n    }\n}\n",
  "sourcePath": "/Users/yaksheshgupta/Desktop/Equistart_Smart_Contract/contracts/contracts/crowdsale/utils/escrow/Escrow.sol",
  "ast": {
    "absolutePath": "project:/contracts/crowdsale/utils/escrow/Escrow.sol",
    "exportedSymbols": {
      "Address": [
        6805
      ],
      "Context": [
        8198
      ],
      "Escrow": [
        25182
      ],
      "SafeMath": [
        11930
      ],
      "Secondary": [
        25661
      ]
    },
    "id": 25183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25047,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:317"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 25048,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25183,
        "sourceUnit": 11931,
        "src": "58:57:317",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/crowdsale/utils/ownership/Secondary.sol",
        "file": "../ownership/Secondary.sol",
        "id": 25049,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25183,
        "sourceUnit": 25662,
        "src": "116:36:317",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 25050,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25183,
        "sourceUnit": 6806,
        "src": "153:51:317",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25052,
              "name": "Secondary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25661,
              "src": "872:9:317"
            },
            "id": 25053,
            "nodeType": "InheritanceSpecifier",
            "src": "872:9:317"
          }
        ],
        "canonicalName": "Escrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25051,
          "nodeType": "StructuredDocumentation",
          "src": "207:645:317",
          "text": " @title Escrow\n @dev Base escrow contract, holds funds designated for a payee until they\n withdraw them.\n Intended usage: This contract (and derived escrow contracts) should be a\n standalone contract, that only interacts with the contract that instantiated\n it. That way, it is guaranteed that all Ether will be handled according to\n the `Escrow` rules, and there is no need to check for payable functions or\n transfers in the inheritance tree. The contract that uses the escrow as its\n payment method should be its primary, and provide public methods redirecting\n to the escrow's deposit and withdraw."
        },
        "fullyImplemented": true,
        "id": 25182,
        "linearizedBaseContracts": [
          25182,
          25661,
          8198
        ],
        "name": "Escrow",
        "nameLocation": "862:6:317",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 25056,
            "libraryName": {
              "id": 25054,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11930,
              "src": "894:8:317"
            },
            "nodeType": "UsingForDirective",
            "src": "888:27:317",
            "typeName": {
              "id": 25055,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "907:7:317",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 25059,
            "libraryName": {
              "id": 25057,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6805,
              "src": "926:7:317"
            },
            "nodeType": "UsingForDirective",
            "src": "920:34:317",
            "typeName": {
              "id": 25058,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "938:15:317",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
            "id": 25065,
            "name": "Deposited",
            "nameLocation": "966:9:317",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25061,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "992:5:317",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "976:21:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:7:317",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25063,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "1007:9:317",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "999:17:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "975:42:317"
            },
            "src": "960:58:317"
          },
          {
            "anonymous": false,
            "eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
            "id": 25071,
            "name": "Withdrawn",
            "nameLocation": "1029:9:317",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25067,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "1055:5:317",
                  "nodeType": "VariableDeclaration",
                  "scope": 25071,
                  "src": "1039:21:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:317",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25069,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "1070:9:317",
                  "nodeType": "VariableDeclaration",
                  "scope": 25071,
                  "src": "1062:17:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:42:317"
            },
            "src": "1023:58:317"
          },
          {
            "constant": false,
            "id": 25075,
            "mutability": "mutable",
            "name": "_deposits",
            "nameLocation": "1123:9:317",
            "nodeType": "VariableDeclaration",
            "scope": 25182,
            "src": "1087:45:317",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 25074,
              "keyType": {
                "id": 25072,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1095:7:317",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1087:27:317",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 25073,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1106:7:317",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 25086,
              "nodeType": "Block",
              "src": "1204:40:317",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 25082,
                      "name": "_deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25075,
                      "src": "1221:9:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25084,
                    "indexExpression": {
                      "id": 25083,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25077,
                      "src": "1231:5:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1221:16:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25081,
                  "id": 25085,
                  "nodeType": "Return",
                  "src": "1214:23:317"
                }
              ]
            },
            "functionSelector": "e3a9db1a",
            "id": 25087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositsOf",
            "nameLocation": "1148:10:317",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25077,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "1167:5:317",
                  "nodeType": "VariableDeclaration",
                  "scope": 25087,
                  "src": "1159:13:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:317",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:15:317"
            },
            "returnParameters": {
              "id": 25081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25080,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25087,
                  "src": "1195:7:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:7:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1194:9:317"
            },
            "scope": 25182,
            "src": "1139:105:317",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25116,
              "nodeType": "Block",
              "src": "1453:140:317",
              "statements": [
                {
                  "assignments": [
                    25096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25096,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1471:6:317",
                      "nodeType": "VariableDeclaration",
                      "scope": 25116,
                      "src": "1463:14:317",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1463:7:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25099,
                  "initialValue": {
                    "expression": {
                      "id": 25097,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1480:3:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 25098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "1480:9:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1463:26:317"
                },
                {
                  "expression": {
                    "id": 25109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25100,
                        "name": "_deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25075,
                        "src": "1499:9:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25102,
                      "indexExpression": {
                        "id": 25101,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25090,
                        "src": "1509:5:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1499:16:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25107,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25096,
                          "src": "1539:6:317",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 25103,
                            "name": "_deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25075,
                            "src": "1518:9:317",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 25105,
                          "indexExpression": {
                            "id": 25104,
                            "name": "payee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25090,
                            "src": "1528:5:317",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1518:16:317",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 25106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11794,
                        "src": "1518:20:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 25108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1518:28:317",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1499:47:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25110,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:47:317"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25112,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25090,
                        "src": "1572:5:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25113,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25096,
                        "src": "1579:6:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25111,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25065,
                      "src": "1562:9:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:24:317",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25115,
                  "nodeType": "EmitStatement",
                  "src": "1557:29:317"
                }
              ]
            },
            "documentation": {
              "id": 25088,
              "nodeType": "StructuredDocumentation",
              "src": "1250:131:317",
              "text": " @dev Stores the sent amount as credit to be withdrawn.\n @param payee The destination address of the funds."
            },
            "functionSelector": "f340fa01",
            "id": 25117,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25093,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25092,
                  "name": "onlyPrimary",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25624,
                  "src": "1433:11:317"
                },
                "nodeType": "ModifierInvocation",
                "src": "1433:11:317"
              }
            ],
            "name": "deposit",
            "nameLocation": "1395:7:317",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25090,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "1411:5:317",
                  "nodeType": "VariableDeclaration",
                  "scope": 25117,
                  "src": "1403:13:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:317",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1402:15:317"
            },
            "returnParameters": {
              "id": 25094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:317"
            },
            "scope": 25182,
            "src": "1386:207:317",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25148,
              "nodeType": "Block",
              "src": "2206:157:317",
              "statements": [
                {
                  "assignments": [
                    25126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25126,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "2224:7:317",
                      "nodeType": "VariableDeclaration",
                      "scope": 25148,
                      "src": "2216:15:317",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25125,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2216:7:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25130,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25127,
                      "name": "_deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25075,
                      "src": "2234:9:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25129,
                    "indexExpression": {
                      "id": 25128,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25120,
                      "src": "2244:5:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2234:16:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2216:34:317"
                },
                {
                  "expression": {
                    "id": 25135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25131,
                        "name": "_deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25075,
                        "src": "2261:9:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25133,
                      "indexExpression": {
                        "id": 25132,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25120,
                        "src": "2271:5:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2261:16:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 25134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2280:1:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2261:20:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25136,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:20:317"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25140,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25126,
                        "src": "2307:7:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25137,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25120,
                        "src": "2292:5:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 25139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2292:14:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 25141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2292:23:317",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25142,
                  "nodeType": "ExpressionStatement",
                  "src": "2292:23:317"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25144,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25120,
                        "src": "2341:5:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 25145,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25126,
                        "src": "2348:7:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25143,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25071,
                      "src": "2331:9:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:25:317",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25147,
                  "nodeType": "EmitStatement",
                  "src": "2326:30:317"
                }
              ]
            },
            "documentation": {
              "id": 25118,
              "nodeType": "StructuredDocumentation",
              "src": "1599:534:317",
              "text": " @dev Withdraw accumulated balance for a payee, forwarding 2300 gas (a\n Solidity `transfer`).\n NOTE: This function has been deprecated, use {withdrawWithGas} instead.\n Calling contracts with fixed-gas limits is an anti-pattern and may break\n contract interactions in network upgrades (hardforks).\n https://diligence.consensys.net/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more.]\n @param payee The address whose funds will be withdrawn and transferred to."
            },
            "functionSelector": "51cff8d9",
            "id": 25149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25122,
                  "name": "onlyPrimary",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25624,
                  "src": "2194:11:317"
                },
                "nodeType": "ModifierInvocation",
                "src": "2194:11:317"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2147:8:317",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25120,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "2172:5:317",
                  "nodeType": "VariableDeclaration",
                  "scope": 25149,
                  "src": "2156:21:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 25119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:15:317",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2155:23:317"
            },
            "returnParameters": {
              "id": 25124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2206:0:317"
            },
            "scope": 25182,
            "src": "2138:225:317",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25180,
              "nodeType": "Block",
              "src": "2794:158:317",
              "statements": [
                {
                  "assignments": [
                    25158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25158,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "2812:7:317",
                      "nodeType": "VariableDeclaration",
                      "scope": 25180,
                      "src": "2804:15:317",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2804:7:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25162,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25159,
                      "name": "_deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25075,
                      "src": "2822:9:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25161,
                    "indexExpression": {
                      "id": 25160,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25152,
                      "src": "2832:5:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2822:16:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2804:34:317"
                },
                {
                  "expression": {
                    "id": 25167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25163,
                        "name": "_deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25075,
                        "src": "2849:9:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25165,
                      "indexExpression": {
                        "id": 25164,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25152,
                        "src": "2859:5:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2849:16:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 25166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2868:1:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2849:20:317",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25168,
                  "nodeType": "ExpressionStatement",
                  "src": "2849:20:317"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25172,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25158,
                        "src": "2896:7:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25169,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25152,
                        "src": "2880:5:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 25171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6527,
                      "src": "2880:15:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 25173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2880:24:317",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25174,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:24:317"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25176,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25152,
                        "src": "2930:5:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 25177,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25158,
                        "src": "2937:7:317",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25175,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25071,
                      "src": "2920:9:317",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2920:25:317",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25179,
                  "nodeType": "EmitStatement",
                  "src": "2915:30:317"
                }
              ]
            },
            "documentation": {
              "id": 25150,
              "nodeType": "StructuredDocumentation",
              "src": "2369:353:317",
              "text": " @dev Same as {withdraw}, but forwarding all gas to the recipient.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n _Available since v2.4.0._"
            },
            "functionSelector": "6809691a",
            "id": 25181,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25154,
                  "name": "onlyPrimary",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25624,
                  "src": "2782:11:317"
                },
                "nodeType": "ModifierInvocation",
                "src": "2782:11:317"
              }
            ],
            "name": "withdrawWithGas",
            "nameLocation": "2736:15:317",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25152,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "2768:5:317",
                  "nodeType": "VariableDeclaration",
                  "scope": 25181,
                  "src": "2752:21:317",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 25151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:15:317",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2751:23:317"
            },
            "returnParameters": {
              "id": 25156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2794:0:317"
            },
            "scope": 25182,
            "src": "2727:225:317",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25183,
        "src": "853:2101:317",
        "usedErrors": []
      }
    ],
    "src": "32:2923:317"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2023-02-24T10:21:17.259Z",
  "devdoc": {
    "details": "Base escrow contract, holds funds designated for a payee until they withdraw them. Intended usage: This contract (and derived escrow contracts) should be a standalone contract, that only interacts with the contract that instantiated it. That way, it is guaranteed that all Ether will be handled according to the `Escrow` rules, and there is no need to check for payable functions or transfers in the inheritance tree. The contract that uses the escrow as its payment method should be its primary, and provide public methods redirecting to the escrow's deposit and withdraw.",
    "kind": "dev",
    "methods": {
      "deposit(address)": {
        "details": "Stores the sent amount as credit to be withdrawn.",
        "params": {
          "payee": "The destination address of the funds."
        }
      },
      "primary()": {
        "returns": {
          "_0": "the address of the primary."
        }
      },
      "transferPrimary(address)": {
        "details": "Transfers contract to a new primary.",
        "params": {
          "recipient": "The address of new primary."
        }
      },
      "withdraw(address)": {
        "details": "Withdraw accumulated balance for a payee, forwarding 2300 gas (a Solidity `transfer`). NOTE: This function has been deprecated, use {withdrawWithGas} instead. Calling contracts with fixed-gas limits is an anti-pattern and may break contract interactions in network upgrades (hardforks). https://diligence.consensys.net/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more.]",
        "params": {
          "payee": "The address whose funds will be withdrawn and transferred to."
        }
      },
      "withdrawWithGas(address)": {
        "details": "Same as {withdraw}, but forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}. _Available since v2.4.0._"
      }
    },
    "title": "Escrow",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}