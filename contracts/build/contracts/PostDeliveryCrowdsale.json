{
  "contractName": "PostDeliveryCrowdsale",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seeToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seeWallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seeWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale that locks tokens from withdrawal until it ends.\",\"kind\":\"dev\",\"methods\":{\"_rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the balance of an account.\"}},\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"closingTime()\":{\"returns\":{\"_0\":\"the crowdsale closing time.\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"isOpen()\":{\"returns\":{\"_0\":\"true if the crowdsale is open, false otherwise.\"}},\"openingTime()\":{\"returns\":{\"_0\":\"the crowdsale opening time.\"}},\"seeToken()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"seeWallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}},\"withdrawTokens(address)\":{\"details\":\"Withdraw tokens only after crowdsale ends.\",\"params\":{\"beneficiary\":\"Whose tokens will be withdrawn.\"}}},\"title\":\"PostDeliveryCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"notice\":\"Event for crowdsale extending\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol\":\"PostDeliveryCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xe06117cd283f6b1f42e069a0e17edf18428549f95432ecacaed0d9767356ebac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bd4bd1236e9e60ac5deb140c8fcac957aa7270899b79359209d69f5086fe254\",\"dweb:/ipfs/QmUBgSwTCBm3VuymX4ZyRvxk4c5GMP1oD9s7M2HDXCTVkh\"]},\"project:/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol\":{\"keccak256\":\"0xaf9628b013c50d2d482529792311680e6d0808dae0fdfcbffa3c016866d7ef5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64fe8fc4683636482feb46a19588d22f79c948421cde557c6331570b68a936ed\",\"dweb:/ipfs/QmaYXZgpzZJ5YkmxbmE3SunQhtxXfT2VC56k3ffoCVJh7R\"]},\"project:/contracts/crowdsale/utils/ownership/Secondary.sol\":{\"keccak256\":\"0x426c69adeb8ed078fd1236c6877e113ab38a2499ffd97a14f5c9ae93e691b365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://354f3dba89ee52196cbb7b4cac697a5bc94b5ba0ab1ffc87201d8a12c47738d0\",\"dweb:/ipfs/QmVvczaPMws4AYs9S545Jsh66BbmHT82R4cjGWSphTgshL\"]},\"project:/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0xb6d7441287841b0ba2f7aacee745ad830fe7e88b7fbdea1a62ad209bd87f9f9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1e9a3c7d247ce442f56138f4a54ad6add13b3167ffe48875f46c8e9db9cc15b\",\"dweb:/ipfs/QmUza836sjwWD8amCkRMLJUtp5rb29i3zUKxntGSzQGoSK\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../validation/TimedCrowdsale.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../utils/ownership/Secondary.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title PostDeliveryCrowdsale\n * @dev Crowdsale that locks tokens from withdrawal until it ends.\n */\nabstract contract PostDeliveryCrowdsale is TimedCrowdsale {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n    __unstable__TokenVault private _vault;\n\n    constructor() {\n        _vault = new __unstable__TokenVault();\n    }\n\n    /**\n     * @dev Withdraw tokens only after crowdsale ends.\n     * @param beneficiary Whose tokens will be withdrawn.\n     */\n    function withdrawTokens(address beneficiary) public virtual {\n        require(hasClosed(), \"PostDeliveryCrowdsale: not closed\");\n        uint256 amount = _balances[beneficiary];\n        require(\n            amount > 0,\n            \"PostDeliveryCrowdsale: beneficiary is not due any tokens\"\n        );\n\n        _balances[beneficiary] = 0;\n        _vault.transfer(token, beneficiary, amount);\n    }\n\n    /**\n     * @return the balance of an account.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev Overrides parent by storing due balances, and delivering tokens to the vault instead of the end user. This\n     * ensures that the tokens will be available by the time they are withdrawn (which may not be the case if\n     * `_deliverTokens` was called later).\n     * @param beneficiary Token purchaser\n     * @param tokenAmount Amount of tokens purchased\n     */\n    function _processPurchase(address beneficiary, uint256 tokenAmount)\n        internal\n        virtual\n        override\n    {\n        _balances[beneficiary] = _balances[beneficiary].add(tokenAmount);\n        _deliverTokens(address(_vault), tokenAmount);\n    }\n}\n\n/**\n * @title __unstable__TokenVault\n * @dev Similar to an Escrow for tokens, this contract allows its primary account to spend its tokens as it sees fit.\n * This contract is an internal helper for PostDeliveryCrowdsale, and should not be used outside of this context.\n */\n// solhint-disable-next-line contract-name-camelcase\ncontract __unstable__TokenVault is Secondary {\n    function transfer(\n        IERC20 token,\n        address to,\n        uint256 amount\n    ) public onlyPrimary {\n        token.transfer(to, amount);\n    }\n}\n",
  "sourcePath": "/Users/yaksheshgupta/Desktop/Equistart_Smart_Contract/contracts/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
    "exportedSymbols": {
      "Address": [
        1390
      ],
      "Context": [
        1412
      ],
      "Crowdsale": [
        3439
      ],
      "ERC20": [
        640
      ],
      "IERC20": [
        718
      ],
      "IERC20Metadata": [
        743
      ],
      "IERC20Permit": [
        779
      ],
      "PostDeliveryCrowdsale": [
        3616
      ],
      "ReentrancyGuard": [
        53
      ],
      "SafeERC20": [
        1060
      ],
      "SafeMath": [
        2589
      ],
      "Secondary": [
        5276
      ],
      "TimedCrowdsale": [
        5709
      ],
      "__unstable__TokenVault": [
        3640
      ]
    },
    "id": 3641,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3505,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:236"
      },
      {
        "absolutePath": "project:/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "../validation/TimedCrowdsale.sol",
        "id": 3506,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3641,
        "sourceUnit": 5710,
        "src": "57:42:236",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3507,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3641,
        "sourceUnit": 2590,
        "src": "100:57:236",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/crowdsale/utils/ownership/Secondary.sol",
        "file": "../utils/ownership/Secondary.sol",
        "id": 3508,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3641,
        "sourceUnit": 5277,
        "src": "158:42:236",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3509,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3641,
        "sourceUnit": 719,
        "src": "201:56:236",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3511,
              "name": "TimedCrowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5709,
              "src": "409:14:236"
            },
            "id": 3512,
            "nodeType": "InheritanceSpecifier",
            "src": "409:14:236"
          }
        ],
        "canonicalName": "PostDeliveryCrowdsale",
        "contractDependencies": [
          3640
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3510,
          "nodeType": "StructuredDocumentation",
          "src": "259:106:236",
          "text": " @title PostDeliveryCrowdsale\n @dev Crowdsale that locks tokens from withdrawal until it ends."
        },
        "fullyImplemented": false,
        "id": 3616,
        "linearizedBaseContracts": [
          3616,
          5709,
          3439,
          53,
          1412
        ],
        "name": "PostDeliveryCrowdsale",
        "nameLocation": "384:21:236",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3515,
            "libraryName": {
              "id": 3513,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2589,
              "src": "436:8:236"
            },
            "nodeType": "UsingForDirective",
            "src": "430:27:236",
            "typeName": {
              "id": 3514,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "449:7:236",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3519,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "499:9:236",
            "nodeType": "VariableDeclaration",
            "scope": 3616,
            "src": "463:45:236",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3518,
              "keyType": {
                "id": 3516,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "471:7:236",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "463:27:236",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3517,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "482:7:236",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3522,
            "mutability": "mutable",
            "name": "_vault",
            "nameLocation": "545:6:236",
            "nodeType": "VariableDeclaration",
            "scope": 3616,
            "src": "514:37:236",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
              "typeString": "contract __unstable__TokenVault"
            },
            "typeName": {
              "id": 3521,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3520,
                "name": "__unstable__TokenVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3640,
                "src": "514:22:236"
              },
              "referencedDeclaration": 3640,
              "src": "514:22:236",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
                "typeString": "contract __unstable__TokenVault"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3532,
              "nodeType": "Block",
              "src": "572:54:236",
              "statements": [
                {
                  "expression": {
                    "id": 3530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3525,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3522,
                      "src": "582:6:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
                        "typeString": "contract __unstable__TokenVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "591:26:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$___unstable__TokenVault_$3640_$",
                          "typeString": "function () returns (contract __unstable__TokenVault)"
                        },
                        "typeName": {
                          "id": 3527,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3526,
                            "name": "__unstable__TokenVault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3640,
                            "src": "595:22:236"
                          },
                          "referencedDeclaration": 3640,
                          "src": "595:22:236",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
                            "typeString": "contract __unstable__TokenVault"
                          }
                        }
                      },
                      "id": 3529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "591:28:236",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
                        "typeString": "contract __unstable__TokenVault"
                      }
                    },
                    "src": "582:37:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
                      "typeString": "contract __unstable__TokenVault"
                    }
                  },
                  "id": 3531,
                  "nodeType": "ExpressionStatement",
                  "src": "582:37:236"
                }
              ]
            },
            "id": 3533,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:2:236"
            },
            "returnParameters": {
              "id": 3524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "572:0:236"
            },
            "scope": 3616,
            "src": "558:68:236",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3572,
              "nodeType": "Block",
              "src": "821:336:236",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3540,
                          "name": "hasClosed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5659,
                          "src": "839:9:236",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "839:11:236",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f737444656c697665727943726f776473616c653a206e6f7420636c6f736564",
                        "id": 3542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "852:35:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c29c4315eb01a52160c465d0c4789a47ecbe40dd194bb953044920b39a1c2fca",
                          "typeString": "literal_string \"PostDeliveryCrowdsale: not closed\""
                        },
                        "value": "PostDeliveryCrowdsale: not closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c29c4315eb01a52160c465d0c4789a47ecbe40dd194bb953044920b39a1c2fca",
                          "typeString": "literal_string \"PostDeliveryCrowdsale: not closed\""
                        }
                      ],
                      "id": 3539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "831:7:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:57:236",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "831:57:236"
                },
                {
                  "assignments": [
                    3546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3546,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "906:6:236",
                      "nodeType": "VariableDeclaration",
                      "scope": 3572,
                      "src": "898:14:236",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3545,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "898:7:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3550,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3547,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3519,
                      "src": "915:9:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3549,
                    "indexExpression": {
                      "id": 3548,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3536,
                      "src": "925:11:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "915:22:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "898:39:236"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3552,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3546,
                          "src": "968:6:236",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "977:1:236",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "968:10:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f737444656c697665727943726f776473616c653a2062656e6566696369617279206973206e6f742064756520616e7920746f6b656e73",
                        "id": 3555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "992:58:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9112d2e87485a8eabe91fcfc4d0fe2dcc1c98cc1facbacbf7cca92659a7df8f0",
                          "typeString": "literal_string \"PostDeliveryCrowdsale: beneficiary is not due any tokens\""
                        },
                        "value": "PostDeliveryCrowdsale: beneficiary is not due any tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9112d2e87485a8eabe91fcfc4d0fe2dcc1c98cc1facbacbf7cca92659a7df8f0",
                          "typeString": "literal_string \"PostDeliveryCrowdsale: beneficiary is not due any tokens\""
                        }
                      ],
                      "id": 3551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "947:7:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:113:236",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3557,
                  "nodeType": "ExpressionStatement",
                  "src": "947:113:236"
                },
                {
                  "expression": {
                    "id": 3562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3558,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "1071:9:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3560,
                      "indexExpression": {
                        "id": 3559,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3536,
                        "src": "1081:11:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1071:22:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1096:1:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1071:26:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3563,
                  "nodeType": "ExpressionStatement",
                  "src": "1071:26:236"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3567,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3152,
                        "src": "1123:5:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$718",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 3568,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3536,
                        "src": "1130:11:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3569,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3546,
                        "src": "1143:6:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$718",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3564,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3522,
                        "src": "1107:6:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
                          "typeString": "contract __unstable__TokenVault"
                        }
                      },
                      "id": 3566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3639,
                      "src": "1107:15:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$718_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256) external"
                      }
                    },
                    "id": 3570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:43:236",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3571,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:43:236"
                }
              ]
            },
            "documentation": {
              "id": 3534,
              "nodeType": "StructuredDocumentation",
              "src": "632:124:236",
              "text": " @dev Withdraw tokens only after crowdsale ends.\n @param beneficiary Whose tokens will be withdrawn."
            },
            "functionSelector": "49df728c",
            "id": 3573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nameLocation": "770:14:236",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3536,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "793:11:236",
                  "nodeType": "VariableDeclaration",
                  "scope": 3573,
                  "src": "785:19:236",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:236",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:21:236"
            },
            "returnParameters": {
              "id": 3538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "821:0:236"
            },
            "scope": 3616,
            "src": "761:396:236",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3585,
              "nodeType": "Block",
              "src": "1287:42:236",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3581,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3519,
                      "src": "1304:9:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3583,
                    "indexExpression": {
                      "id": 3582,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3576,
                      "src": "1314:7:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1304:18:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3580,
                  "id": 3584,
                  "nodeType": "Return",
                  "src": "1297:25:236"
                }
              ]
            },
            "documentation": {
              "id": 3574,
              "nodeType": "StructuredDocumentation",
              "src": "1163:53:236",
              "text": " @return the balance of an account."
            },
            "functionSelector": "70a08231",
            "id": 3586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1230:9:236",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3576,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1248:7:236",
                  "nodeType": "VariableDeclaration",
                  "scope": 3586,
                  "src": "1240:15:236",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:236",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:17:236"
            },
            "returnParameters": {
              "id": 3580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3579,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3586,
                  "src": "1278:7:236",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1277:9:236"
            },
            "scope": 3616,
            "src": "1221:108:236",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3403
            ],
            "body": {
              "id": 3614,
              "nodeType": "Block",
              "src": "1840:135:236",
              "statements": [
                {
                  "expression": {
                    "id": 3604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3595,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "1850:9:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3597,
                      "indexExpression": {
                        "id": 3596,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3589,
                        "src": "1860:11:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1850:22:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3602,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3591,
                          "src": "1902:11:236",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3598,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3519,
                            "src": "1875:9:236",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3600,
                          "indexExpression": {
                            "id": 3599,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3589,
                            "src": "1885:11:236",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1875:22:236",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2453,
                        "src": "1875:26:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1875:39:236",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1850:64:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3605,
                  "nodeType": "ExpressionStatement",
                  "src": "1850:64:236"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3609,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3522,
                            "src": "1947:6:236",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
                              "typeString": "contract __unstable__TokenVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$___unstable__TokenVault_$3640",
                              "typeString": "contract __unstable__TokenVault"
                            }
                          ],
                          "id": 3608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1939:7:236",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1939:7:236",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1939:15:236",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3611,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3591,
                        "src": "1956:11:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3606,
                      "name": "_deliverTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3389,
                      "src": "1924:14:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:44:236",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3613,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:44:236"
                }
              ]
            },
            "documentation": {
              "id": 3587,
              "nodeType": "StructuredDocumentation",
              "src": "1335:378:236",
              "text": " @dev Overrides parent by storing due balances, and delivering tokens to the vault instead of the end user. This\n ensures that the tokens will be available by the time they are withdrawn (which may not be the case if\n `_deliverTokens` was called later).\n @param beneficiary Token purchaser\n @param tokenAmount Amount of tokens purchased"
            },
            "id": 3615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processPurchase",
            "nameLocation": "1727:16:236",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3593,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1827:8:236"
            },
            "parameters": {
              "id": 3592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3589,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1752:11:236",
                  "nodeType": "VariableDeclaration",
                  "scope": 3615,
                  "src": "1744:19:236",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1744:7:236",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3591,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "1773:11:236",
                  "nodeType": "VariableDeclaration",
                  "scope": 3615,
                  "src": "1765:19:236",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:7:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1743:42:236"
            },
            "returnParameters": {
              "id": 3594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1840:0:236"
            },
            "scope": 3616,
            "src": "1718:257:236",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3641,
        "src": "366:1611:236",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3618,
              "name": "Secondary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5276,
              "src": "2340:9:236"
            },
            "id": 3619,
            "nodeType": "InheritanceSpecifier",
            "src": "2340:9:236"
          }
        ],
        "canonicalName": "__unstable__TokenVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3617,
          "nodeType": "StructuredDocumentation",
          "src": "1979:272:236",
          "text": " @title __unstable__TokenVault\n @dev Similar to an Escrow for tokens, this contract allows its primary account to spend its tokens as it sees fit.\n This contract is an internal helper for PostDeliveryCrowdsale, and should not be used outside of this context."
        },
        "fullyImplemented": true,
        "id": 3640,
        "linearizedBaseContracts": [
          3640,
          5276,
          1412
        ],
        "name": "__unstable__TokenVault",
        "nameLocation": "2314:22:236",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3638,
              "nodeType": "Block",
              "src": "2465:43:236",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3634,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3624,
                        "src": "2490:2:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3635,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3626,
                        "src": "2494:6:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3631,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3622,
                        "src": "2475:5:236",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$718",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 685,
                      "src": "2475:14:236",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2475:26:236",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "2475:26:236"
                }
              ]
            },
            "functionSelector": "beabacc8",
            "id": 3639,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3629,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3628,
                  "name": "onlyPrimary",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5239,
                  "src": "2453:11:236"
                },
                "nodeType": "ModifierInvocation",
                "src": "2453:11:236"
              }
            ],
            "name": "transfer",
            "nameLocation": "2365:8:236",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3622,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2390:5:236",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "2383:12:236",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$718",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3621,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3620,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 718,
                      "src": "2383:6:236"
                    },
                    "referencedDeclaration": 718,
                    "src": "2383:6:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$718",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3624,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2413:2:236",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "2405:10:236",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2405:7:236",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3626,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2433:6:236",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "2425:14:236",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:236",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2373:72:236"
            },
            "returnParameters": {
              "id": 3630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2465:0:236"
            },
            "scope": 3640,
            "src": "2356:152:236",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3641,
        "src": "2305:205:236",
        "usedErrors": []
      }
    ],
    "src": "32:2479:236"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2023-02-06T21:49:46.651Z",
  "devdoc": {
    "details": "Crowdsale that locks tokens from withdrawal until it ends.",
    "kind": "dev",
    "methods": {
      "_rate()": {
        "returns": {
          "_0": "the number of token units a buyer gets per wei."
        }
      },
      "balanceOf(address)": {
        "returns": {
          "_0": "the balance of an account."
        }
      },
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "closingTime()": {
        "returns": {
          "_0": "the crowdsale closing time."
        }
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "returns": {
          "_0": "Whether crowdsale period has elapsed"
        }
      },
      "isOpen()": {
        "returns": {
          "_0": "true if the crowdsale is open, false otherwise."
        }
      },
      "openingTime()": {
        "returns": {
          "_0": "the crowdsale opening time."
        }
      },
      "seeToken()": {
        "returns": {
          "_0": "the token being sold."
        }
      },
      "seeWallet()": {
        "returns": {
          "_0": "the address where funds are collected."
        }
      },
      "weiRaised()": {
        "returns": {
          "_0": "the amount of wei raised."
        }
      },
      "withdrawTokens(address)": {
        "details": "Withdraw tokens only after crowdsale ends.",
        "params": {
          "beneficiary": "Whose tokens will be withdrawn."
        }
      }
    },
    "title": "PostDeliveryCrowdsale",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TimedCrowdsaleExtended(uint256,uint256)": {
        "notice": "Event for crowdsale extending"
      },
      "TokensPurchased(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}