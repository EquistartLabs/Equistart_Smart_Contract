{
  "contractName": "AllowanceCrowdsale",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seeToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seeWallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "tokenWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remainingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seeWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.\",\"kind\":\"dev\",\"methods\":{\"_rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"Constructor, takes token wallet address.\",\"params\":{\"tokenWallet_\":\"Address holding the tokens, which has approved allowance to the crowdsale.\"}},\"remainingTokens()\":{\"details\":\"Checks the amount of tokens left in the allowance.\",\"returns\":{\"_0\":\"Amount of tokens left in the allowance\"}},\"seeToken()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"seeWallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"tokenWallet()\":{\"returns\":{\"_0\":\"the address of the wallet that will hold the tokens.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"AllowanceCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/crowdsale/emission/AllowanceCrowdsale.sol\":\"AllowanceCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xe06117cd283f6b1f42e069a0e17edf18428549f95432ecacaed0d9767356ebac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bd4bd1236e9e60ac5deb140c8fcac957aa7270899b79359209d69f5086fe254\",\"dweb:/ipfs/QmUBgSwTCBm3VuymX4ZyRvxk4c5GMP1oD9s7M2HDXCTVkh\"]},\"project:/contracts/crowdsale/emission/AllowanceCrowdsale.sol\":{\"keccak256\":\"0x29ae43a816a4df57a998e1d05c4fd732b12d17c5478459f7423605ab3b5c9674\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc5888a36bc59ef76685165e5ea02d7b0720314c0fb92a94182adaf42256400\",\"dweb:/ipfs/QmUoQ9cwoXPy93cxTpFaADvcVgnxqdvgzAW9z3KjCykQVa\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../Crowdsale.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/**\n * @title AllowanceCrowdsale\n * @dev Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.\n */\nabstract contract AllowanceCrowdsale is Crowdsale {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    address private _tokenWallet;\n\n    /**\n     * @dev Constructor, takes token wallet address.\n     * @param tokenWallet_ Address holding the tokens, which has approved allowance to the crowdsale.\n     */\n    constructor(\n        address tokenWallet_\n    ) {\n        require(\n            tokenWallet_ != address(0),\n            \"AllowanceCrowdsale: token wallet is the zero address\"\n        );\n        _tokenWallet = tokenWallet_;\n    }\n\n    /**\n     * @return the address of the wallet that will hold the tokens.\n     */\n    function tokenWallet() public view returns (address) {\n        return _tokenWallet;\n    }\n\n    /**\n     * @dev Checks the amount of tokens left in the allowance.\n     * @return Amount of tokens left in the allowance\n     */\n    function remainingTokens() public view returns (uint256) {\n        return\n            Math.min(\n                token.balanceOf(_tokenWallet),\n                token.allowance(_tokenWallet, address(this))\n            );\n    }\n\n    /**\n     * @dev Overrides parent behavior by transferring tokens from wallet.\n     * @param beneficiary Token purchaser\n     * @param tokenAmount Amount of tokens purchased\n     */\n    function _deliverTokens(address beneficiary, uint256 tokenAmount)\n        internal\n        override\n    {\n        token.safeTransferFrom(_tokenWallet, beneficiary, tokenAmount);\n    }\n}\n",
  "sourcePath": "/Users/yaksheshgupta/Desktop/Equistart_Smart_Contract/contracts/contracts/crowdsale/emission/AllowanceCrowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/crowdsale/emission/AllowanceCrowdsale.sol",
    "exportedSymbols": {
      "Address": [
        1390
      ],
      "AllowanceCrowdsale": [
        3936
      ],
      "Context": [
        1412
      ],
      "Crowdsale": [
        3439
      ],
      "ERC20": [
        640
      ],
      "IERC20": [
        718
      ],
      "IERC20Metadata": [
        743
      ],
      "IERC20Permit": [
        779
      ],
      "Math": [
        2277
      ],
      "ReentrancyGuard": [
        53
      ],
      "SafeERC20": [
        1060
      ],
      "SafeMath": [
        2589
      ]
    },
    "id": 3937,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3847,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:239"
      },
      {
        "absolutePath": "project:/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 3848,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 3440,
        "src": "57:26:239",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3849,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 719,
        "src": "84:56:239",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 1061,
        "src": "141:65:239",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 2590,
        "src": "207:57:239",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 3852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3937,
        "sourceUnit": 2278,
        "src": "265:53:239",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3854,
              "name": "Crowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3439,
              "src": "509:9:239"
            },
            "id": 3855,
            "nodeType": "InheritanceSpecifier",
            "src": "509:9:239"
          }
        ],
        "canonicalName": "AllowanceCrowdsale",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3853,
          "nodeType": "StructuredDocumentation",
          "src": "320:148:239",
          "text": " @title AllowanceCrowdsale\n @dev Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale."
        },
        "fullyImplemented": false,
        "id": 3936,
        "linearizedBaseContracts": [
          3936,
          3439,
          53,
          1412
        ],
        "name": "AllowanceCrowdsale",
        "nameLocation": "487:18:239",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3858,
            "libraryName": {
              "id": 3856,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2589,
              "src": "531:8:239"
            },
            "nodeType": "UsingForDirective",
            "src": "525:27:239",
            "typeName": {
              "id": 3857,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:239",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 3862,
            "libraryName": {
              "id": 3859,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1060,
              "src": "563:9:239"
            },
            "nodeType": "UsingForDirective",
            "src": "557:27:239",
            "typeName": {
              "id": 3861,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3860,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 718,
                "src": "577:6:239"
              },
              "referencedDeclaration": 718,
              "src": "577:6:239",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$718",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 3864,
            "mutability": "mutable",
            "name": "_tokenWallet",
            "nameLocation": "606:12:239",
            "nodeType": "VariableDeclaration",
            "scope": 3936,
            "src": "590:28:239",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3863,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "590:7:239",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3884,
              "nodeType": "Block",
              "src": "844:179:239",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3871,
                          "name": "tokenWallet_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3867,
                          "src": "875:12:239",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "899:1:239",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "891:7:239",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3872,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "891:7:239",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "891:10:239",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "875:26:239",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657420697320746865207a65726f2061646472657373",
                        "id": 3877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "915:54:239",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
                          "typeString": "literal_string \"AllowanceCrowdsale: token wallet is the zero address\""
                        },
                        "value": "AllowanceCrowdsale: token wallet is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
                          "typeString": "literal_string \"AllowanceCrowdsale: token wallet is the zero address\""
                        }
                      ],
                      "id": 3870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "854:7:239",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:125:239",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3879,
                  "nodeType": "ExpressionStatement",
                  "src": "854:125:239"
                },
                {
                  "expression": {
                    "id": 3882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3880,
                      "name": "_tokenWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3864,
                      "src": "989:12:239",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3881,
                      "name": "tokenWallet_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3867,
                      "src": "1004:12:239",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "989:27:239",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3883,
                  "nodeType": "ExpressionStatement",
                  "src": "989:27:239"
                }
              ]
            },
            "documentation": {
              "id": 3865,
              "nodeType": "StructuredDocumentation",
              "src": "625:166:239",
              "text": " @dev Constructor, takes token wallet address.\n @param tokenWallet_ Address holding the tokens, which has approved allowance to the crowdsale."
            },
            "id": 3885,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3867,
                  "mutability": "mutable",
                  "name": "tokenWallet_",
                  "nameLocation": "825:12:239",
                  "nodeType": "VariableDeclaration",
                  "scope": 3885,
                  "src": "817:20:239",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:239",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "807:36:239"
            },
            "returnParameters": {
              "id": 3869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:239"
            },
            "scope": 3936,
            "src": "796:227:239",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3893,
              "nodeType": "Block",
              "src": "1166:36:239",
              "statements": [
                {
                  "expression": {
                    "id": 3891,
                    "name": "_tokenWallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3864,
                    "src": "1183:12:239",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3890,
                  "id": 3892,
                  "nodeType": "Return",
                  "src": "1176:19:239"
                }
              ]
            },
            "documentation": {
              "id": 3886,
              "nodeType": "StructuredDocumentation",
              "src": "1029:79:239",
              "text": " @return the address of the wallet that will hold the tokens."
            },
            "functionSelector": "bff99c6c",
            "id": 3894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenWallet",
            "nameLocation": "1122:11:239",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:2:239"
            },
            "returnParameters": {
              "id": 3890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3894,
                  "src": "1157:7:239",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:239",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:9:239"
            },
            "scope": 3936,
            "src": "1113:89:239",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3916,
              "nodeType": "Block",
              "src": "1398:167:239",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3904,
                            "name": "_tokenWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "1469:12:239",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3902,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3152,
                            "src": "1453:5:239",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$718",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 675,
                          "src": "1453:15:239",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1453:29:239",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3908,
                            "name": "_tokenWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "1516:12:239",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3911,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1538:4:239",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AllowanceCrowdsale_$3936",
                                  "typeString": "contract AllowanceCrowdsale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AllowanceCrowdsale_$3936",
                                  "typeString": "contract AllowanceCrowdsale"
                                }
                              ],
                              "id": 3910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1530:7:239",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3909,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1530:7:239",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1530:13:239",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3906,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3152,
                            "src": "1500:5:239",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$718",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 695,
                          "src": "1500:15:239",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 3913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1500:44:239",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3900,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "1427:4:239",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$2277_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 3901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1455,
                      "src": "1427:8:239",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:131:239",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3899,
                  "id": 3915,
                  "nodeType": "Return",
                  "src": "1408:150:239"
                }
              ]
            },
            "documentation": {
              "id": 3895,
              "nodeType": "StructuredDocumentation",
              "src": "1208:128:239",
              "text": " @dev Checks the amount of tokens left in the allowance.\n @return Amount of tokens left in the allowance"
            },
            "functionSelector": "bf583903",
            "id": 3917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remainingTokens",
            "nameLocation": "1350:15:239",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:2:239"
            },
            "returnParameters": {
              "id": 3899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3898,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3917,
                  "src": "1389:7:239",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:239",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1388:9:239"
            },
            "scope": 3936,
            "src": "1341:224:239",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3389
            ],
            "body": {
              "id": 3934,
              "nodeType": "Block",
              "src": "1860:79:239",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3929,
                        "name": "_tokenWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3864,
                        "src": "1893:12:239",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3930,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3920,
                        "src": "1907:11:239",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3931,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3922,
                        "src": "1920:11:239",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3926,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3152,
                        "src": "1870:5:239",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$718",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 837,
                      "src": "1870:22:239",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$718_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$718_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1870:62:239",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3933,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:62:239"
                }
              ]
            },
            "documentation": {
              "id": 3918,
              "nodeType": "StructuredDocumentation",
              "src": "1571:180:239",
              "text": " @dev Overrides parent behavior by transferring tokens from wallet.\n @param beneficiary Token purchaser\n @param tokenAmount Amount of tokens purchased"
            },
            "id": 3935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nameLocation": "1765:14:239",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3924,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1847:8:239"
            },
            "parameters": {
              "id": 3923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3920,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1788:11:239",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "1780:19:239",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:239",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3922,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "1809:11:239",
                  "nodeType": "VariableDeclaration",
                  "scope": 3935,
                  "src": "1801:19:239",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:239",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1779:42:239"
            },
            "returnParameters": {
              "id": 3925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:239"
            },
            "scope": 3936,
            "src": "1756:183:239",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3937,
        "src": "469:1472:239",
        "usedErrors": []
      }
    ],
    "src": "32:1910:239"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2023-02-06T21:49:46.657Z",
  "devdoc": {
    "details": "Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.",
    "kind": "dev",
    "methods": {
      "_rate()": {
        "returns": {
          "_0": "the number of token units a buyer gets per wei."
        }
      },
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "constructor": {
        "details": "Constructor, takes token wallet address.",
        "params": {
          "tokenWallet_": "Address holding the tokens, which has approved allowance to the crowdsale."
        }
      },
      "remainingTokens()": {
        "details": "Checks the amount of tokens left in the allowance.",
        "returns": {
          "_0": "Amount of tokens left in the allowance"
        }
      },
      "seeToken()": {
        "returns": {
          "_0": "the token being sold."
        }
      },
      "seeWallet()": {
        "returns": {
          "_0": "the address where funds are collected."
        }
      },
      "tokenWallet()": {
        "returns": {
          "_0": "the address of the wallet that will hold the tokens."
        }
      },
      "weiRaised()": {
        "returns": {
          "_0": "the amount of wei raised."
        }
      }
    },
    "title": "AllowanceCrowdsale",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokensPurchased(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}